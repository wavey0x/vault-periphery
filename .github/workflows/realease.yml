name: Publish release data

on:
  release:
    types: [published]
  workflow_dispatch:  # This allows manual triggering from the Actions tab

jobs:
  update_release:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Ensure permissions are set to write for contents
      actions: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check Ape or Foundry
        id: check_ape
        run: |
          echo "is_ape=false" >> $GITHUB_ENV
          if [ -f "ape-config.yaml" ]; then
            echo "is_ape=true" >> $GITHUB_ENV
          fi

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Ensure this matches the version you need

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install web3
      
      - name: Install Foundry
        if: env.is_ape == 'false'
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install Ape and plugins
        if: env.is_ape == 'true'
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          ape plugins install .

      - name: Compile contracts
        run: |
          if [ "${{ env.is_ape }}" = "true" ]; then
            ape compile --force --size
          else
            forge compile
          fi
          
      - name: Execute script and generate data
        run: python release.py ${{ github.event.inputs.tag_name || github.event.release.tag_name }}

      - name: Upload deployment data to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./release/release_data.json
          asset_name: release_data.json
          asset_content_type: application/json